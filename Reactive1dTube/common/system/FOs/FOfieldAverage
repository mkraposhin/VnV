/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Version:  v2212
    \\  /    A nd           | Website:  www.openfoam.com
     \\/     M anipulation  |
-------------------------------------------------------------------------------
Description
    Computes ensemble- and/or time-based field averages, with optional
    windowing, for a user-specified selection of volumetric and/or surface
    fields.

Usage
    Usage by the postProcess utility is not available.

\*---------------------------------------------------------------------------*/

fieldAverage
{
    // Mandatory entries
    type            fieldAverage;
    libs            (fieldFunctionObjects); 
 
    // Optional entries (runtime modifiable)
    restartOnRestart    false;
    restartOnOutput     false;
    periodicRestart     false;
    restartPeriod       1000;

    // Optional (inherited) entries
    region          region0;
    enabled         true;
    log             true;
    timeStart       $tStartAvg; // approx 2x flow-throughs
    timeEnd         $tEndTime;
    executeControl  timeStep; //must be timeStep for fieldAverage
    executeInterval 1;
    writeControl    writeTime;
    writeInterval   -1;

    fields
    (
        U
        {
            mean            on;
            prime2Mean      on;
            base            time;
            /*
            windowType      exact;
            window          10.0;
            windowName      w1U;
            allowRestart    true;
            */
        }
        Ma
        {
            mean            on;
            prime2Mean      on;
            base            time;
        }
        p
        {
            mean            on;
            prime2Mean      on;
            base            time;
        }
        T
        {
            mean            on;
            prime2Mean      on;
            base            time;
        }
        rho
        {
            mean            on;
            prime2Mean      off;
            base            time;
        }

        f_Bilger
        {
            mean            on;
            prime2Mean      off;
            base            time;
        }
        OH
        {
            mean            on;
            prime2Mean      off;
            base            time;
        }
        dQ
        {
            mean            on;
            prime2Mean      off;
            base            time;
        }
/*
        alphat
        {
            mean            off;
            prime2Mean      off;
            base            time;
        }
        nut
        {
            mean            off;
            prime2Mean      off;
            base            time;
        }
        nuTilda
        {
            mean            off;
            prime2Mean      off;
            base            time;
        }
*/
    );
}


// ************************************************************************* //
